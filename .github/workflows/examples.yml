name: examples

on:
  push:
    branches:
      - main
      - dev-*
  pull_request: {}

jobs:
  cpp-lib:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path=ocipkg-cli/ -f
      - name: Add path
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Login to GitHub Container Registry
        run: ocipkg login -u ${{ github.repository_owner }} -p ${{ github.token }} https://ghcr.io

      - name: Build static library
        run: |
          cd examples/cpp/lib
          cmake -Bbuild
          cmake --build build/ --target ocipkg
          ocipkg push build/ocipkg_static_cpp.tar

  rust-lib:
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path=ocipkg-cli/ -f
      - name: Add path
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Login to GitHub Container Registry
        run: ocipkg login -u ${{ github.repository_owner }} -p ${{ github.token }} https://ghcr.io

      - name: Build and publish a container with cargo-ocipkg
        run: |
          cd examples/rust/lib
          cargo ocipkg build --release
          cargo ocipkg publish --release

  rust-exe:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path=ocipkg-cli/ -f
      - name: Add path
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Login to GitHub Container Registry
        run: ocipkg login -u ${{ github.repository_owner }} -p ${{ github.token }} https://ghcr.io

      - name: Build rust-exe example
        run: |
          cd examples/rust/exe
          cargo run
